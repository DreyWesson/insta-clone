{"version":3,"sources":["reportWebVitals.js","components/Header.js","firebase.js","time.js","components/Posts.js","modal.js","components/ImageUpload.js","App.js","actions/actionTypes.js","reducers/userReducer.js","reducers/postReducer.js","reducers/rootReducer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","src","alt","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","storage","formatDate","strTime","day","date","Date","formatType","hours","getHours","minutes","getMinutes","weekDay","monthName","ampm","getDay","month","getMonth","isToday","getDate","getFullYear","timeSince","seconds","Math","floor","interval","Posts","postId","username","imageUrl","caption","user","timestamp","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","postComment","e","preventDefault","add","text","displayName","FieldValue","serverTimestamp","slotInTime","time","Avatar","FavoriteBorderOutlined","fontSize","ChatBubbleOutlineOutlined","SendOutlined","BookmarkBorderOutlined","toDate","length","console","log","random","type","placeholder","value","onChange","target","disabled","onClick","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","ImageUpload","setCaption","image","setImage","progress","setProgress","max","files","Button","ref","name","put","on","progressReport","round","bytesTransferred","totalBytes","err","alert","message","child","getDownloadURL","url","App","posts","setPosts","modalStyle","open","setOpen","setUsername","email","setEmail","openSignIn","setOpenSignIn","setUser","password","setPassword","classes","process","REACT_APP_CLIENT_TOKEN","REACT_APP_ID","merge","onAuthStateChanged","authUser","id","Modal","onClose","aria-labelledby","aria-describedby","style","Input","createUserWithEmailAndPassword","updateProfile","catch","signInWithEmailAndPassword","signOut","clientAccessToken","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","actionTypes","initialState","userReducer","state","action","postReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78130b66.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"header__container\">\n        <img\n          className=\"header__logo\"\n          src=\"https://www.vectorlogo.zone/logos/instagram/instagram-wordmark.svg\"\n          alt=\"insta logo\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","// import firebase from \"firebase\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCieCzS6duFxIxszYn--lmhqf6zEBzjH94\",\n  authDomain: \"insta-343f8.firebaseapp.com\",\n  databaseURL: \"https://insta-343f8.firebaseio.com\",\n  projectId: \"insta-343f8\",\n  storageBucket: \"insta-343f8.appspot.com\",\n  messagingSenderId: \"111420370821\",\n  appId: \"1:111420370821:web:a32e8d50a7246221515eec\",\n  measurementId: \"G-CNGJFK6WLB\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { auth, storage };\nexport default db;\n","function formatDate(date = new Date(), formatType = \"timeSince\") {\n  let hours = date.getHours(),\n    minutes = date.getMinutes(),\n    weekDay = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    monthName = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ],\n    ampm = hours >= 12 ? \"pm\" : \"am\",\n    strTime,\n    day;\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  strTime = hours + \":\" + minutes + ampm;\n  day = weekDay[date.getDay()];\n  let month = monthName[date.getMonth()];\n\n  // if the date is TODAY display only time else display DAY,DATE\n  let isToday = () => {\n    switch (formatType) {\n      case \"time&date\":\n        // 6:28 pm 14 Nov, 2020\n        return `${strTime} ${date.getDate()} ${month}, ${date.getFullYear()}`;\n      case \"time&day&date\":\n        // 6:28 pm Sat 14 Nov, 2020\n        return `${strTime} ${day} ${date.getDate()} ${month}, ${date.getFullYear()}`;\n      case \"isToday\":\n        // 6:28 pm • Today\n        return `${strTime} • Today`;\n      case \"checkIfToday\":\n        return `${date.getDate()}•${month}•${date.getFullYear()}`;\n\n      case \"longTime\":\n        // Sat 14 Nov, 2020\n        return `${day} ${date.getDate()} ${month}, ${date.getFullYear()}`;\n      default:\n        // 20mins ago\n        return timeSince(date);\n    }\n  };\n\n  function timeSince(date) {\n    let seconds = Math.floor((new Date() - date) / 1000),\n      interval = seconds / 31536000;\n\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" years ago\"\n        : Math.floor(interval) + \" year ago\";\n    }\n    interval = seconds / 2592000;\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" months ago\"\n        : Math.floor(interval) + \" month ago\";\n    }\n    interval = seconds / 86400;\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" days ago\"\n        : Math.floor(interval) + \" day ago\";\n    }\n    interval = seconds / 3600;\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" hours ago\"\n        : Math.floor(interval) + \" hour ago\";\n    }\n    interval = seconds / 60;\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" minutes ago\"\n        : Math.floor(interval) + \" minute ago\";\n    }\n    return Math.floor(interval) > 1\n      ? Math.floor(seconds) + \" seconds ago\"\n      : Math.floor(seconds) + \" seconds ago\";\n  }\n\n  return isToday();\n}\n\nexport default formatDate;\n","import { Avatar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport firebase from \"firebase\";\nimport db from \"../firebase\";\nimport \"./Posts.css\";\nimport formatDate from \"../time\";\nimport {\n  BookmarkBorderOutlined,\n  ChatBubbleOutlineOutlined,\n  FavoriteBorderOutlined,\n  SendOutlined,\n} from \"@material-ui/icons\";\n\nconst Posts = ({ postId, username, imageUrl, caption, user, timestamp }) => {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n\n  useEffect(() => {\n    let unsubscribe;\n    if (postId)\n      unsubscribe = db\n        .collection(\"posts\")\n        .doc(postId)\n        .collection(\"comments\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) => {\n          setComments(snapshot.docs.map((doc) => doc.data()));\n        });\n\n    return () => unsubscribe();\n  }, [postId]);\n\n  const postComment = (e) => {\n    e.preventDefault();\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setComment(\"\");\n  };\n  const slotInTime = (time) => {\n    return formatDate(new Date(), \"checkIfToday\") ===\n      formatDate(time, \"checkIfToday\")\n      ? formatDate(time, \"whenVsNow\")\n      : formatDate(time, \"longTime\");\n  };\n\n  return (\n    <>\n      {username && (\n        <div className=\"post\">\n          <div className=\"post__header\">\n            <Avatar className=\"post__avatar\" alt={username} src={imageUrl} />\n            <h3>{username}</h3>\n          </div>\n          <img className=\"post__image\" src={imageUrl} alt=\"\" />\n\n          <div className=\"post__icons\">\n            <div className=\"post__iconsGrouped\">\n              <FavoriteBorderOutlined fontSize=\"large\" className=\"post__icon\" />\n              <ChatBubbleOutlineOutlined\n                fontSize=\"large\"\n                className=\"post__icon\"\n              />\n              <SendOutlined fontSize=\"large\" className=\"post__icon\" />\n            </div>\n            <BookmarkBorderOutlined fontSize=\"large\" className=\"post__icon\" />\n          </div>\n\n          <div className=\"post__content\">\n            <h4 className=\"post__contentText\">\n              <strong>{username}:</strong> {caption}\n            </h4>\n            <small className=\"post__contentTime\">\n              {slotInTime(timestamp?.toDate())}\n            </small>\n          </div>\n\n          <div className=\"post__comments\">\n            {comments.length > 0 ? (\n              <h2 className=\"post__commentsHeader\">Comments</h2>\n            ) : (\n              console.log(`👨‍🦱${username} 📨${caption}: 🤐 no comment`)\n            )}\n            {comments?.map((comment) => (\n              <div className=\"post__commentContainer\">\n                <p key={Math.random() * 1000} className=\"post__comment\">\n                  <strong>{comment.username}: </strong> {comment.text}\n                </p>\n                <small>\n                  {comment.timestamp && slotInTime(comment.timestamp?.toDate())}\n                  {/* {comment.timestamp?.toDate().toDateString()} */}\n                </small>\n              </div>\n            ))}\n          </div>\n          <form className=\"post__commentBox\">\n            {user ? (\n              <>\n                <input\n                  className=\"post__input\"\n                  type=\"text\"\n                  placeholder=\"Add a comment...\"\n                  value={comment}\n                  onChange={(e) => setComment(e.target.value)}\n                />\n                <button\n                  className=\"post__button\"\n                  disabled={!comment}\n                  type=\"submit\"\n                  onClick={postComment}\n                >\n                  Post\n                </button>\n              </>\n            ) : (\n              <>\n                <input\n                  className=\"post__inputSignup\"\n                  type=\"text\"\n                  placeholder=\"Add a comment...\"\n                  value={comment}\n                  onChange={(e) => setComment(e.target.value)}\n                />\n                <button\n                  className=\"post__buttonSignup\"\n                  disabled={!comment}\n                  type=\"submit\"\n                  onClick={postComment}\n                >\n                  SignIn to comment\n                </button>\n              </>\n            )}\n          </form>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Posts;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: \"25em\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport { getModalStyle, useStyles };\n","import \"./ImageUpload.css\";\nimport React, { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport db, { storage } from \"../firebase\";\nimport firebase from \"firebase\";\n\nconst ImageUpload = ({ username }) => {\n  const [caption, setCaption] = useState(\"\"),\n    [image, setImage] = useState(null),\n    [progress, setProgress] = useState(0);\n\n  const handleChange = (e) => {\n    e.target.files[0] && setImage(e.target.files[0]);\n  };\n  const handleUpload = (e) => {\n    // Uploading the files\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const progressReport = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        setProgress(progressReport);\n      },\n      (err) => alert(err.message),\n      () => {\n        // Downloading the uploaded file\n        storage\n          .ref(\"images\")\n          .child(image.name)\n          .getDownloadURL()\n          .then((url) => {\n            db.collection(\"posts\").add({\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n              caption: caption,\n              imageUrl: url,\n              username: username,\n            });\n          });\n        setImage(null);\n        setProgress(0);\n        setCaption(\"\");\n      }\n    );\n  };\n  return (\n    <div className=\"imageUpload\">\n      <h2>Upload Content</h2>\n      <p>\n        <small>\n          <i>Add caption and upload your contents here</i>\n        </small>\n      </p>\n      <input\n        className=\"imageUpload__caption\"\n        type=\"text\"\n        placeholder=\"Enter a caption...\"\n        value={caption}\n        onChange={(e) => setCaption(e.target.value)}\n      />\n      <progress\n        className=\"imageUpload__progressBar\"\n        value={progress}\n        max=\"100\"\n      />\n      <input\n        className=\"imageUpload__button\"\n        type=\"file\"\n        onChange={handleChange}\n      />\n      <Button className=\"imageUpload__uploadButton\" onClick={handleUpload}>\n        Upload\n      </Button>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { Button, Input } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Posts from \"./components/Posts\";\nimport db, { auth } from \"./firebase\";\nimport { getModalStyle, useStyles } from \"./modal\";\nimport Modal from \"@material-ui/core/Modal\";\nimport ImageUpload from \"./components/ImageUpload\";\nimport InstagramEmbed from \"react-instagram-embed\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]),\n    [modalStyle] = useState(getModalStyle),\n    [open, setOpen] = useState(false),\n    [username, setUsername] = useState(\"\"),\n    [email, setEmail] = useState(\"\"),\n    [openSignIn, setOpenSignIn] = useState(false),\n    [user, setUser] = useState(null),\n    [password, setPassword] = useState(\"\"),\n    classes = useStyles(),\n    { REACT_APP_CLIENT_TOKEN, REACT_APP_ID } = process.env,\n    merge = `${REACT_APP_ID}|${REACT_APP_CLIENT_TOKEN}`;\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      console.log(authUser);\n      authUser ? setUser(authUser) : setUser(null);\n    });\n    return () => unsubscribe();\n  }, [user, username]);\n\n  useEffect(() => {\n    db.collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setPosts(\n          snapshot.docs.map((doc) => {\n            const data = doc.data(),\n              id = doc.id;\n            return { id, ...data };\n          })\n        );\n      });\n  }, []);\n\n  const signUp = (e) => {\n    e.preventDefault();\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        return authUser.user.updateProfile({\n          displayName: username,\n        });\n      })\n      .catch((err) => alert(err.message));\n    setOpen(false);\n  };\n  const signIn = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((err) => err.message);\n\n    setOpenSignIn(false);\n  };\n  return (\n    <div className=\"app\">\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signUp\">\n            <center>\n              <img\n                className=\"header__logo\"\n                src=\"https://www.vectorlogo.zone/logos/instagram/instagram-wordmark.svg\"\n                alt=\"insta logo\"\n              />\n            </center>\n            <Input\n              className=\"app__inputs\"\n              type=\"text\"\n              placeholder=\"Username\"\n              onChange={(e) => setUsername(e.target.value)}\n              value={username}\n            />\n            <Input\n              className=\"app__inputs\"\n              type=\"email\"\n              placeholder=\"Email\"\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n            />\n            <Input\n              className=\"app__inputs\"\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n            />\n            <Button type=\"submit\" onClick={signUp}>\n              Sign Up\n            </Button>\n          </form>\n        </div>\n      </Modal>\n      <Modal\n        open={openSignIn}\n        onClose={() => setOpenSignIn(false)}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signUp\">\n            <center>\n              <img\n                className=\"header__logo\"\n                src=\"https://www.vectorlogo.zone/logos/instagram/instagram-wordmark.svg\"\n                alt=\"insta logo\"\n              />\n            </center>\n            <Input\n              type=\"email\"\n              placeholder=\"Email\"\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n            />\n            <Input\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n            />\n            <Button type=\"submit\" onClick={signIn}>\n              Sign In\n            </Button>\n          </form>\n        </div>\n      </Modal>\n      <Header />\n      {user ? (\n        <Button type=\"submit\" onClick={() => auth.signOut()}>\n          Logout\n        </Button>\n      ) : (\n        <div className=\"app__loginContainer\">\n          <Button type=\"submit\" onClick={() => setOpenSignIn(true)}>\n            Sign In\n          </Button>\n          <Button type=\"submit\" onClick={() => setOpen(true)}>\n            Sign Up\n          </Button>\n        </div>\n      )}\n      <div className=\"app__posts\">\n        {user?.displayName ? (\n          <ImageUpload username={user.displayName} />\n        ) : (\n          <h3 className=\"app__notLoggedIn\">Sign Up To Upload</h3>\n        )}\n        {posts.map(({ id, username, imageUrl, caption, timestamp }) => {\n          return (\n            <Posts\n              key={id}\n              postId={id}\n              user={user}\n              timestamp={timestamp}\n              username={username}\n              imageUrl={imageUrl}\n              caption={caption}\n            />\n          );\n        })}\n      </div>\n      <InstagramEmbed\n        url=\"https://www.instagram.com/p/BAuc9JmQodPPZBdR1UiXg6YVR2IJ80yx-PatzE0/\"\n        clientAccessToken={merge}\n        maxWidth={320}\n        hideCaption={false}\n        containerTagName=\"div\"\n        protocol=\"\"\n        injectScript\n        onLoading={() => {}}\n        onSuccess={() => {}}\n        onAfterRender={() => {}}\n        onFailure={() => {}}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","export const actionTypes = {\n  SET_USER: \"SET_USER\",\n  SET_POSTS: \"SET_POSTS\",\n};\n","import { actionTypes } from \"../actions/actionTypes\";\n\nexport const initialState = {\n  user: null,\n};\n\nconst userReducer = (state = initialState, action) => {\n  console.log(action);\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        ...state,\n        user: action.user,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { actionTypes } from \"../actions/actionTypes\";\n\nexport const initialState = {\n  posts: [],\n};\n\nconst postReducer = (state = initialState, action) => {\n  console.log(action);\n  switch (action.type) {\n    case actionTypes.SET_POSTS:\n      return {\n        ...state,\n        posts: action.posts,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n","import { combineReducers } from \"redux\";\nimport userReducer from \"./userReducer\";\nimport postReducer from \"./postReducer\";\n\nconst rootReducer = combineReducers({ userReducer, postReducer });\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport \"./index.css\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nconsole.log(\"List of Reducers Stored in STATE 👉\", store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}