{"version":3,"sources":["reportWebVitals.js","firebase.js","actions/actionTypes.js","actions/modalAction.js","actions/userActions.js","modal.js","components/Header.js","components/ImageUpload.js","time.js","components/Posts.js","components/Poster.js","App.js","actions/postActions.js","reducers/userReducer.js","reducers/postReducer.js","reducers/modalReducer.js","reducers/rootReducer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","storage","actionTypes","setOpen","data","dispatch","getState","type","open","setOpenSignIn","openSignIn","setUser","user","setEmail","email","setPassword","password","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Header","useDispatch","useSelector","userReducer","openReducer","username","useState","modalStyle","classes","Modal","onClose","aria-labelledby","aria-describedby","style","className","src","alt","Input","placeholder","onChange","e","target","value","Button","onClick","preventDefault","createUserWithEmailAndPassword","authUser","updateProfile","displayName","catch","err","alert","message","signInWithEmailAndPassword","signOut","ImageUpload","caption","setCaption","image","setImage","progress","setProgress","max","files","ref","name","put","on","snapshot","progressReport","Math","round","bytesTransferred","totalBytes","child","getDownloadURL","url","collection","add","timestamp","FieldValue","serverTimestamp","imageUrl","formatDate","strTime","day","date","Date","formatType","hours","getHours","minutes","getMinutes","weekDay","monthName","ampm","getDay","month","getMonth","timeUI","getDate","getFullYear","timeSince","seconds","floor","interval","isToday","postTime","today","checkIsToday","Posts","postId","comments","setComments","comment","setComment","useEffect","unsubscribe","doc","orderBy","onSnapshot","docs","map","Avatar","FavoriteBorderOutlined","ChatBubbleOutlineOutlined","SendOutlined","BookmarkBorderOutlined","toDate","length","console","log","text","random","disabled","Poster","postReducer","posts","id","App","process","REACT_APP_CLIENT_TOKEN","REACT_APP_ID","merge","onAuthStateChanged","clientAccessToken","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","initialState","state","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e76145ac.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import firebase from \"firebase\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCieCzS6duFxIxszYn--lmhqf6zEBzjH94\",\n  authDomain: \"insta-343f8.firebaseapp.com\",\n  databaseURL: \"https://insta-343f8.firebaseio.com\",\n  projectId: \"insta-343f8\",\n  storageBucket: \"insta-343f8.appspot.com\",\n  messagingSenderId: \"111420370821\",\n  appId: \"1:111420370821:web:a32e8d50a7246221515eec\",\n  measurementId: \"G-CNGJFK6WLB\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { auth, storage };\nexport default db;\n","export const actionTypes = {\n  SET_USER: \"SET_USER\",\n  SET_POSTS: \"SET_POSTS\",\n  SET_AUTH: \"SET_AUTH\",\n  SET_OPEN: \"SET_OPEN\",\n  SET_OPEN_SIGN_IN: \"SET_OPEN_SIGN_IN\",\n  SET_PASSWORD: \"SET_PASSWORD\",\n  SET_EMAIL: \"SET_EMAIL\",\n  SET_USERNAME: \"SET_USERNAME\",\n};\n","import { actionTypes } from \"./actionTypes\";\n\nexport const setOpen = (data) => {\n  // console.log(data);\n  return (dispatch, getState) =>\n    dispatch({ type: actionTypes.SET_OPEN, open: data });\n};\n\nexport const setOpenSignIn = (data) => {\n  // console.log(data);\n  return (dispatch, getState) =>\n    dispatch({\n      type: actionTypes.SET_OPEN_SIGN_IN,\n      openSignIn: data,\n    });\n};\n","import { actionTypes } from \"./actionTypes\";\n\nconst setUser = (data) => {\n  // console.log(data);\n\n  return (dispatch, getState) =>\n    dispatch({ type: actionTypes.SET_USER, user: data });\n};\n\nconst setUsername = (data) => {\n  // console.log(data);\n  return (dispatch, getState) =>\n    dispatch({ type: actionTypes.SET_USERNAME, username: data });\n};\n\nconst setEmail = (data) => {\n  // console.log(data);\n  return (dispatch, getState) =>\n    dispatch({ type: actionTypes.SET_EMAIL, email: data });\n};\n\nconst setPassword = (data) => {\n  // console.log(data);\n  return (dispatch, getState) =>\n    dispatch({ type: actionTypes.SET_PASSWORD, password: data });\n};\nconst setAuth = (data) => {\n  // console.log(data);\n  return (dispatch, getState) =>\n    dispatch({ type: actionTypes.SET_AUTH, auth: data });\n};\n\nexport { setUser, setAuth, setUsername, setEmail, setPassword };\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport { getModalStyle, useStyles };\n","import { Button, Input } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./Header.css\";\nimport { auth } from \"../firebase\";\nimport { setOpen, setOpenSignIn } from \"../actions/modalAction\";\nimport { setEmail, setPassword, setUsername } from \"../actions/userActions\";\nimport { getModalStyle, useStyles } from \"../modal\";\nimport Modal from \"@material-ui/core/Modal\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const { user, username, email, password, open, openSignIn } = useSelector(\n    ({ userReducer, openReducer }) => {\n      let { user, username, email, password } = userReducer,\n        { open, openSignIn } = openReducer;\n      return {\n        user,\n        username,\n        email,\n        password,\n        open,\n        openSignIn,\n      };\n    }\n  );\n\n  const [modalStyle] = useState(getModalStyle),\n    classes = useStyles();\n\n  const signUp = (e) => {\n    e.preventDefault();\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        return authUser.user.updateProfile({\n          displayName: username,\n        });\n      })\n      .catch((err) => alert(err.message));\n    dispatch(setOpen(false));\n  };\n  const signIn = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((err) => err.message);\n\n    dispatch(setOpenSignIn(false));\n  };\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={() => dispatch(setOpen(false))}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"header__signUp\">\n            <center>\n              <img\n                className=\"header__logo\"\n                src=\"https://www.vectorlogo.zone/logos/instagram/instagram-wordmark.svg\"\n                alt=\"insta logo\"\n              />\n            </center>\n            <Input\n              className=\"app__inputs\"\n              type=\"text\"\n              placeholder=\"Username\"\n              onChange={(e) => dispatch(setUsername(e.target.value))}\n              value={username}\n            />\n            <Input\n              className=\"app__inputs\"\n              type=\"email\"\n              placeholder=\"Email\"\n              onChange={(e) => dispatch(setEmail(e.target.value))}\n              value={email}\n            />\n            <Input\n              className=\"app__inputs\"\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) => dispatch(setPassword(e.target.value))}\n              value={password}\n            />\n            <Button type=\"submit\" onClick={signUp}>\n              Sign Up\n            </Button>\n          </form>\n        </div>\n      </Modal>\n      <Modal\n        open={openSignIn}\n        onClose={() => dispatch(setOpenSignIn(false))}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"header__signUp\">\n            <center>\n              <img\n                className=\"header__logo\"\n                src=\"https://www.vectorlogo.zone/logos/instagram/instagram-wordmark.svg\"\n                alt=\"insta logo\"\n              />\n            </center>\n            <Input\n              type=\"email\"\n              placeholder=\"Email\"\n              onChange={(e) => dispatch(setEmail(e.target.value))}\n              value={email}\n            />\n            <Input\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) => dispatch(setPassword(e.target.value))}\n              value={password}\n            />\n            <Button type=\"submit\" onClick={signIn}>\n              Sign In\n            </Button>\n          </form>\n        </div>\n      </Modal>\n\n      <div className=\"header\">\n        <div className=\"header__container\">\n          <img\n            className=\"header__logo\"\n            src=\"https://www.vectorlogo.zone/logos/instagram/instagram-wordmark.svg\"\n            alt=\"insta logo\"\n          />\n          {user ? (\n            <Button\n              className=\"header__logoutButton\"\n              type=\"submit\"\n              onClick={() => auth.signOut()}\n            >\n              Logout\n            </Button>\n          ) : (\n            <div className=\"app__loginContainer\">\n              <Button\n                type=\"submit\"\n                onClick={() => dispatch(setOpenSignIn(true))}\n              >\n                Sign In\n              </Button>\n              <Button type=\"submit\" onClick={() => dispatch(setOpen(true))}>\n                Sign Up\n              </Button>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","import \"./ImageUpload.css\";\nimport React, { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport db, { storage } from \"../firebase\";\nimport firebase from \"firebase\";\n\nconst ImageUpload = ({ username }) => {\n  const [caption, setCaption] = useState(\"\"),\n    [image, setImage] = useState(null),\n    [progress, setProgress] = useState(0);\n\n  const handleChange = (e) => {\n    e.target.files[0] && setImage(e.target.files[0]);\n  };\n  const handleUpload = (e) => {\n    // Uploading the files\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const progressReport = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        setProgress(progressReport);\n      },\n      (err) => alert(err.message),\n      () => {\n        // Downloading the uploaded file\n        storage\n          .ref(\"images\")\n          .child(image.name)\n          .getDownloadURL()\n          .then((url) => {\n            db.collection(\"posts\").add({\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n              caption: caption,\n              imageUrl: url,\n              username: username,\n            });\n            setImage(null);\n            setProgress(0);\n            setCaption(\"\");\n          })\n          .catch((err) => alert(err.message));\n      }\n    );\n  };\n  return (\n    <div className=\"imageUpload\">\n      <h2>Upload Content</h2>\n      <p>\n        <small>\n          <i>Add caption and upload your contents here</i>\n        </small>\n      </p>\n      <input\n        className=\"imageUpload__caption\"\n        type=\"text\"\n        placeholder=\"Enter a caption...\"\n        value={caption}\n        onChange={(e) => setCaption(e.target.value)}\n      />\n      <progress\n        className=\"imageUpload__progressBar\"\n        value={progress}\n        max=\"100\"\n      />\n      <input\n        className=\"imageUpload__button\"\n        type=\"file\"\n        onChange={handleChange}\n      />\n      <Button className=\"imageUpload__uploadButton\" onClick={handleUpload}>\n        Upload\n      </Button>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","function formatDate(date = new Date(), formatType = \"timeSince\") {\n  let hours = date.getHours(),\n    minutes = date.getMinutes(),\n    weekDay = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    monthName = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ],\n    ampm = hours >= 12 ? \"pm\" : \"am\",\n    strTime,\n    day;\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  strTime = hours + \":\" + minutes + ampm;\n  day = weekDay[date.getDay()];\n  let month = monthName[date.getMonth()];\n\n  // if the date is TODAY display only time else display DAY,DATE\n  let timeUI = () => {\n    switch (formatType) {\n      case \"time&date\":\n        // 6:28 pm 14 Nov, 2020\n        return `${strTime} ${date.getDate()} ${month}, ${date.getFullYear()}`;\n      case \"time&day&date\":\n        // 6:28 pm Sat 14 Nov, 2020\n        return `${strTime} ${day} ${date.getDate()} ${month}, ${date.getFullYear()}`;\n      case \"isToday\":\n        // 6:28 pm • Today\n        return `${strTime} • Today`;\n      case \"checkIfToday\":\n        return `${date.getDate()}•${month}•${date.getFullYear()}`;\n\n      case \"longTime\":\n        // Sat 14 Nov, 2020\n        return `${day} ${date.getDate()} ${month}, ${date.getFullYear()}`;\n      default:\n        // 20mins ago\n        return timeSince(date);\n    }\n  };\n\n  function timeSince(date) {\n    let seconds = Math.floor((new Date() - date) / 1000),\n      interval = seconds / 31536000;\n\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" years ago\"\n        : Math.floor(interval) + \" year ago\";\n    }\n    interval = seconds / 2592000;\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" months ago\"\n        : Math.floor(interval) + \" month ago\";\n    }\n    interval = seconds / 86400;\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" days ago\"\n        : Math.floor(interval) + \" day ago\";\n    }\n    interval = seconds / 3600;\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" hours ago\"\n        : Math.floor(interval) + \" hour ago\";\n    }\n    interval = seconds / 60;\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" minutes ago\"\n        : Math.floor(interval) + \" minute ago\";\n    }\n    return Math.floor(interval) > 1\n      ? Math.floor(seconds) + \" seconds ago\"\n      : Math.floor(seconds) + \" second ago\";\n  }\n\n  return timeUI();\n}\nconst isToday = (postTime, today = \"\") => {\n  const checkIsToday = \"checkIfToday\";\n\n  // returns time in formatDate default if is today and 'longTime if its not'\n  return formatDate(new Date(), checkIsToday) ===\n    formatDate(postTime, checkIsToday)\n    ? formatDate(postTime, today)\n    : formatDate(postTime, \"longTime\");\n};\n\nexport { formatDate, isToday };\n","import { Avatar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport firebase from \"firebase\";\nimport db from \"../firebase\";\nimport \"./Posts.css\";\nimport {\n  BookmarkBorderOutlined,\n  ChatBubbleOutlineOutlined,\n  FavoriteBorderOutlined,\n  SendOutlined,\n} from \"@material-ui/icons\";\nimport { isToday } from \"../time\";\nimport { setOpenSignIn } from \"../actions/modalAction\";\nimport { useDispatch } from \"react-redux\";\n\nconst Posts = ({ postId, username, imageUrl, caption, user, timestamp }) => {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let unsubscribe;\n    if (postId)\n      unsubscribe = db\n        .collection(\"posts\")\n        .doc(postId)\n        .collection(\"comments\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) => {\n          setComments(snapshot.docs.map((doc) => doc.data()));\n        });\n\n    return () => unsubscribe();\n  }, [postId]);\n\n  const postComment = (e) => {\n    e.preventDefault();\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setComment(\"\");\n  };\n\n  return (\n    <>\n      {username && (\n        <div className=\"post\">\n          <div className=\"post__header\">\n            <Avatar className=\"post__avatar\" alt={username} src={imageUrl} />\n            <h3>{username}</h3>\n          </div>\n          <img className=\"post__image\" src={imageUrl} alt=\"\" />\n\n          <div className=\"post__icons\">\n            <div className=\"post__iconsGrouped\">\n              <FavoriteBorderOutlined className=\"post__icon\" />\n              <ChatBubbleOutlineOutlined className=\"post__icon\" />\n              <SendOutlined className=\"post__icon\" />\n            </div>\n            <BookmarkBorderOutlined className=\"post__icon\" />\n          </div>\n\n          <div className=\"post__content\">\n            <h4 className=\"post__contentText\">\n              <strong>{username}:</strong> {caption}\n            </h4>\n            <small className=\"post__contentTime\">\n              {isToday(timestamp?.toDate())}\n            </small>\n          </div>\n\n          <div className=\"post__comments\">\n            {comments.length > 0 ? (\n              <h2 className=\"post__commentsHeader\">Comments</h2>\n            ) : (\n              console.log(`👨‍🦱${username} 📨${caption}: 🤐 no comment`)\n            )}\n            {comments?.map((comment) => (\n              <div className=\"post__commentContainer\">\n                <p key={Math.random() * 1000} className=\"post__comment\">\n                  <strong>{comment.username}: </strong> {comment.text}\n                </p>\n                <small>\n                  {comment.timestamp && isToday(comment.timestamp?.toDate())}\n                </small>\n              </div>\n            ))}\n          </div>\n          <form className=\"post__commentBox\">\n            {user ? (\n              <>\n                <input\n                  className=\"post__input\"\n                  type=\"text\"\n                  placeholder=\"Add a comment...\"\n                  value={comment}\n                  onChange={(e) => setComment(e.target.value)}\n                />\n                <button\n                  className=\"post__button\"\n                  disabled={!comment}\n                  type=\"submit\"\n                  onClick={postComment}\n                >\n                  Post\n                </button>\n              </>\n            ) : (\n              <>\n                <input\n                  className=\"post__inputSignup\"\n                  type=\"text\"\n                  placeholder=\"Add a comment...\"\n                  value={comment}\n                  onChange={(e) => setComment(e.target.value)}\n                />\n                <button\n                  className=\"post__buttonSignup\"\n                  type=\"submit\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    dispatch(setOpenSignIn(true));\n                  }}\n                >\n                  Login to comment\n                </button>\n              </>\n            )}\n          </form>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Posts;\n","import \"./Poster.css\";\nimport React from \"react\";\nimport ImageUpload from \"./ImageUpload\";\nimport Posts from \"./Posts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport { setOpen } from \"../actions/modalAction\";\n\nconst Poster = () => {\n  const { user, posts } = useSelector(({ userReducer, postReducer }) => {\n    let { user } = userReducer,\n      { posts } = postReducer;\n    return {\n      user,\n      posts,\n    };\n  });\n  const dispatch = useDispatch();\n  return (\n    <div className=\"poster\">\n      {user ? (\n        <ImageUpload username={user.displayName} />\n      ) : (\n        <div className=\"poster__signUpContainer\">\n          <Button\n            className=\"poster__notLoggedIn\"\n            onClick={() => dispatch(setOpen(true))}\n          >\n            Sign Up To Upload\n          </Button>\n        </div>\n      )}\n      {posts?.map(({ id, username, imageUrl, caption, timestamp }) => {\n        return (\n          <Posts\n            key={id}\n            postId={id}\n            user={user}\n            timestamp={timestamp}\n            username={username}\n            imageUrl={imageUrl}\n            caption={caption}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Poster;\n","import { useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport db, { auth } from \"./firebase\";\nimport InstagramEmbed from \"react-instagram-embed\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"./actions/postActions\";\nimport { setUser } from \"./actions/userActions\";\n\nimport Poster from \"./components/Poster\";\n\nfunction App() {\n  const { REACT_APP_CLIENT_TOKEN, REACT_APP_ID } = process.env,\n    merge = `${REACT_APP_ID}|${REACT_APP_CLIENT_TOKEN}`;\n\n  const dispatch = useDispatch();\n  const { user, username } = useSelector(({ userReducer }) => {\n    let { user, username } = userReducer;\n    return {\n      user,\n      username,\n    };\n  });\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) =>\n      authUser ? dispatch(setUser(authUser)) : dispatch(setUser(null))\n    );\n    return () => unsubscribe();\n  }, [user, username, dispatch]);\n\n  useEffect(() => {\n    function database() {\n      db.collection(\"posts\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) => {\n          dispatch(\n            setPosts(\n              snapshot.docs.map((doc) => {\n                const data = doc.data(),\n                  id = doc.id;\n                return { id, ...data };\n              })\n            )\n          );\n        });\n    }\n    database();\n  }, [dispatch]);\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <Poster />\n      <InstagramEmbed\n        url=\"https://www.instagram.com/p/BAuc9JmQodPPZBdR1UiXg6YVR2IJ80yx-PatzE0/\"\n        clientAccessToken={merge}\n        maxWidth={320}\n        hideCaption={false}\n        containerTagName=\"div\"\n        protocol=\"\"\n        injectScript\n        onLoading={() => {}}\n        onSuccess={() => {}}\n        onAfterRender={() => {}}\n        onFailure={() => {}}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { actionTypes } from \"./actionTypes\";\n\nexport const setPosts = (data) => {\n  // console.log(data);\n  return (dispatch, getState) =>\n    dispatch({ type: actionTypes.SET_POSTS, posts: data });\n};\n","import { actionTypes } from \"../actions/actionTypes\";\n\nexport const initialState = {\n  user: null,\n  username: \"\",\n  email: \"\",\n  password: \"\",\n};\n\nconst userReducer = (state = initialState, action) => {\n  console.log(` 💪 ${action.type} ACTION 💪`, action);\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        ...state,\n        user: action.user,\n      };\n    case actionTypes.SET_USERNAME:\n      return {\n        ...state,\n        username: action.username,\n      };\n    case actionTypes.SET_PASSWORD:\n      return {\n        ...state,\n        password: action.password,\n      };\n    case actionTypes.SET_EMAIL:\n      return {\n        ...state,\n        email: action.email,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { actionTypes } from \"../actions/actionTypes\";\n\nexport const initialState = {\n  posts: [],\n};\n\nconst postReducer = (state = initialState, action) => {\n  console.log(` 💪 ${action.type} ACTION 💪`, action);\n  switch (action.type) {\n    case actionTypes.SET_POSTS:\n      return {\n        ...state,\n        posts: action.posts,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n","import { actionTypes } from \"../actions/actionTypes\";\n\nexport const initialState = {\n  open: false,\n  openSignIn: false,\n};\n\nconst openReducer = (state = initialState, action) => {\n  console.log(` 💪 ${action.type} ACTION 💪`, action);\n  switch (action.type) {\n    case actionTypes.SET_OPEN:\n      return {\n        ...state,\n        open: action.open,\n      };\n    case actionTypes.SET_OPEN_SIGN_IN:\n      return {\n        ...state,\n        openSignIn: action.openSignIn,\n      };\n    default:\n      return state;\n  }\n};\n// const openReducerTwo = (state = initialState, action) => {\n//   console.log(` 💪 ${action.type} ACTION 💪`, action);\n//   switch (action.type) {\n\n//     default:\n//       return state;\n//   }\n// };\n\nexport { openReducer };\n","import { combineReducers } from \"redux\";\nimport userReducer from \"./userReducer\";\nimport postReducer from \"./postReducer\";\nimport { openReducer } from \"./modalReducer\";\n\nconst rootReducer = combineReducers({\n  userReducer,\n  postReducer,\n  openReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport \"./index.css\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nconsole.log(\"List of Reducers Stored in STATE 👉\", store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}