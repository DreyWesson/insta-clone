{"version":3,"sources":["reportWebVitals.js","firebase.js","modal.js","actions/actionTypes.js","actions/actions.js","components/Header.js","components/ImageUpload.js","time.js","components/Posts.js","components/Poster.js","App.js","reducers/userReducer.js","reducers/postReducer.js","reducers/modalReducer.js","reducers/rootReducer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","storage","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","actionTypes","chooseAction","data","actionType","setActionTo","payload","dispatch","getState","type","Header","useDispatch","useSelector","userReducer","openReducer","user","username","email","password","open","openSignIn","console","log","SET_OPEN","SET_OPEN_SIGN_IN","SET_USERNAME","SET_EMAIL","SET_PASSWORD","useState","modalStyle","classes","Modal","onClose","aria-labelledby","aria-describedby","style","className","src","alt","Input","placeholder","onChange","e","target","value","Button","onClick","preventDefault","createUserWithEmailAndPassword","authUser","updateProfile","displayName","catch","err","alert","message","signInWithEmailAndPassword","signOut","ImageUpload","caption","setCaption","image","setImage","progress","setProgress","max","files","ref","name","put","on","snapshot","progressReport","Math","round","bytesTransferred","totalBytes","child","getDownloadURL","url","collection","add","timestamp","FieldValue","serverTimestamp","imageUrl","formatDate","strTime","day","date","Date","formatType","hours","getHours","minutes","getMinutes","weekDay","monthName","ampm","getDay","month","getMonth","timeUI","getDate","getFullYear","timeSince","seconds","floor","interval","isToday","postTime","today","checkIsToday","Posts","postId","comments","setComments","comment","setComment","presentUser","useEffect","unsubscribe","doc","orderBy","onSnapshot","docs","map","Avatar","DeleteOutlined","delete","error","FavoriteBorderOutlined","ChatBubbleOutlineOutlined","SendOutlined","BookmarkBorderOutlined","toDate","length","text","random","disabled","Poster","postReducer","posts","id","App","process","REACT_APP_CLIENT_TOKEN","REACT_APP_ID","merge","SET_USER","SET_POSTS","onAuthStateChanged","clientAccessToken","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","initialState","state","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eaef7e06.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import firebase from \"firebase\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCieCzS6duFxIxszYn--lmhqf6zEBzjH94\",\n  authDomain: \"insta-343f8.firebaseapp.com\",\n  databaseURL: \"https://insta-343f8.firebaseio.com\",\n  projectId: \"insta-343f8\",\n  storageBucket: \"insta-343f8.appspot.com\",\n  messagingSenderId: \"111420370821\",\n  appId: \"1:111420370821:web:a32e8d50a7246221515eec\",\n  measurementId: \"G-CNGJFK6WLB\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { auth, storage };\nexport default db;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport { getModalStyle, useStyles };\n","const actionTypes = {\n  SET_USER: \"SET_USER\",\n  SET_POSTS: \"SET_POSTS\",\n  SET_AUTH: \"SET_AUTH\",\n  SET_OPEN: \"SET_OPEN\",\n  SET_OPEN_SIGN_IN: \"SET_OPEN_SIGN_IN\",\n  SET_PASSWORD: \"SET_PASSWORD\",\n  SET_EMAIL: \"SET_EMAIL\",\n  SET_USERNAME: \"SET_USERNAME\",\n};\n\nconst chooseAction = (data, actionType) => {\n  const setActionTo = (payload) => {\n    return (dispatch, getState) =>\n      dispatch({ type: actionType, [payload]: data });\n  };\n\n  switch (actionType) {\n    // POST ACTION\n    case \"SET_POSTS\":\n      return setActionTo(\"posts\");\n    // USER ACTIONS\n    case \"SET_USER\":\n      return setActionTo(\"user\");\n    case \"SET_USERNAME\":\n      return setActionTo(\"username\");\n    case \"SET_EMAIL\":\n      return setActionTo(\"email\");\n    case \"SET_PASSWORD\":\n      return setActionTo(\"password\");\n    // MODAL ACTIONS\n    case \"SET_OPEN\":\n      return setActionTo(\"open\");\n    case \"SET_OPEN_SIGN_IN\":\n      return setActionTo(\"openSignIn\");\n    default:\n      break;\n  }\n};\n\nexport { actionTypes, chooseAction };\n","const chooseAction = (data, actionType) => {\n  const setActionTo = (payload) => {\n    return (dispatch, getState) =>\n      dispatch({ type: actionType, [payload]: data });\n  };\n\n  switch (actionType) {\n    // POST ACTION\n    case \"SET_POSTS\":\n      return setActionTo(\"posts\");\n    // USER ACTIONS\n    case \"SET_USER\":\n      return setActionTo(\"user\");\n    case \"SET_USERNAME\":\n      return setActionTo(\"username\");\n    case \"SET_EMAIL\":\n      return setActionTo(\"email\");\n    case \"SET_PASSWORD\":\n      return setActionTo(\"password\");\n    // MODAL ACTIONS\n    case \"SET_OPEN\":\n      return setActionTo(\"open\");\n    case \"SET_OPEN_SIGN_IN\":\n      return setActionTo(\"openSignIn\");\n    default:\n      break;\n  }\n};\n\nexport { chooseAction };\n","import { Button, Input } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./Header.css\";\nimport { auth } from \"../firebase\";\nimport { getModalStyle, useStyles } from \"../modal\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { actionTypes } from \"../actions/actionTypes\";\nimport { chooseAction } from \"../actions/actions\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const { user, username, email, password, open, openSignIn } = useSelector(\n    ({ userReducer, openReducer }) => {\n      let { user, username, email, password } = userReducer,\n        { open, openSignIn } = openReducer;\n      return {\n        user,\n        username,\n        email,\n        password,\n        open,\n        openSignIn,\n      };\n    }\n  );\n  console.log(\"USER\", user);\n  console.log(\"USERNAME\", username);\n  console.log(\"EMAIL\", email);\n  console.log(\"PASSWORD\", password);\n\n  const {\n    SET_OPEN,\n    SET_OPEN_SIGN_IN,\n    SET_USERNAME,\n    SET_EMAIL,\n    SET_PASSWORD,\n  } = actionTypes;\n\n  const [modalStyle] = useState(getModalStyle),\n    classes = useStyles();\n\n  const signUp = (e) => {\n    e.preventDefault();\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        return authUser.user.updateProfile({\n          displayName: username,\n        });\n      })\n      .catch((err) => alert(err.message));\n    dispatch(chooseAction(false, SET_OPEN));\n  };\n  const signIn = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((err) => err.message);\n\n    dispatch(chooseAction(false, SET_OPEN_SIGN_IN));\n  };\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={() => dispatch(chooseAction(false, SET_OPEN))}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"header__signUp\">\n            <center>\n              <img\n                className=\"header__logo\"\n                src=\"https://www.vectorlogo.zone/logos/instagram/instagram-wordmark.svg\"\n                alt=\"insta logo\"\n              />\n            </center>\n            <Input\n              className=\"app__inputs\"\n              type=\"text\"\n              placeholder=\"Username\"\n              onChange={(e) =>\n                dispatch(chooseAction(e.target.value, SET_USERNAME))\n              }\n              value={username}\n            />\n            <Input\n              className=\"app__inputs\"\n              type=\"email\"\n              placeholder=\"Email\"\n              onChange={(e) =>\n                dispatch(chooseAction(e.target.value, SET_EMAIL))\n              }\n              value={email}\n            />\n            <Input\n              className=\"app__inputs\"\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) =>\n                dispatch(chooseAction(e.target.value, SET_PASSWORD))\n              }\n              value={password}\n            />\n            <Button type=\"submit\" onClick={signUp}>\n              Sign Up\n            </Button>\n          </form>\n        </div>\n      </Modal>\n      <Modal\n        open={openSignIn}\n        onClose={() => dispatch(chooseAction(false, SET_OPEN_SIGN_IN))}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"header__signUp\">\n            <center>\n              <img\n                className=\"header__logo\"\n                src=\"https://www.vectorlogo.zone/logos/instagram/instagram-wordmark.svg\"\n                alt=\"insta logo\"\n              />\n            </center>\n            <Input\n              type=\"email\"\n              placeholder=\"Email\"\n              onChange={(e) =>\n                dispatch(chooseAction(e.target.value, SET_EMAIL))\n              }\n              value={email}\n            />\n            <Input\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) =>\n                dispatch(chooseAction(e.target.value, SET_PASSWORD))\n              }\n              value={password}\n            />\n            <Button type=\"submit\" onClick={signIn}>\n              Sign In\n            </Button>\n          </form>\n        </div>\n      </Modal>\n\n      <div className=\"header\">\n        <div className=\"header__container\">\n          <img\n            className=\"header__logo\"\n            src=\"https://www.vectorlogo.zone/logos/instagram/instagram-wordmark.svg\"\n            alt=\"insta logo\"\n          />\n          {user ? (\n            <Button\n              className=\"header__logoutButton\"\n              type=\"submit\"\n              onClick={() => auth.signOut()}\n            >\n              Logout\n            </Button>\n          ) : (\n            <div className=\"app__loginContainer\">\n              <Button\n                type=\"submit\"\n                onClick={() => dispatch(chooseAction(true, SET_OPEN_SIGN_IN))}\n              >\n                Sign In\n              </Button>\n              <Button\n                type=\"submit\"\n                onClick={() => dispatch(chooseAction(true, SET_OPEN))}\n              >\n                Sign Up\n              </Button>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","import \"./ImageUpload.css\";\nimport React, { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport db, { storage } from \"../firebase\";\nimport firebase from \"firebase\";\n\nconst ImageUpload = ({ username }) => {\n  // console.log(\"UPLOAD USERNAME\", username);\n  const [caption, setCaption] = useState(\"\"),\n    [image, setImage] = useState(null),\n    [progress, setProgress] = useState(0);\n\n  const handleChange = (e) => {\n    e.target.files[0] && setImage(e.target.files[0]);\n  };\n  const handleUpload = (e) => {\n    // Uploading the files\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const progressReport = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        setProgress(progressReport);\n      },\n      (err) => alert(err.message),\n      () => {\n        // Downloading the uploaded file\n        storage\n          .ref(\"images\")\n          .child(image.name)\n          .getDownloadURL()\n          .then((url) => {\n            console.log(\"UPLOAD USERNAME\", username);\n            db.collection(\"posts\").add({\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n              caption: caption,\n              imageUrl: url,\n              username: username,\n            });\n            setImage(null);\n            setProgress(0);\n            setCaption(\"\");\n          })\n          .catch((err) => alert(err.message));\n      }\n    );\n  };\n  return (\n    <div className=\"imageUpload\">\n      <h2>Upload Content</h2>\n      <p>\n        <small>\n          <i>Add caption and upload your contents here</i>\n        </small>\n      </p>\n      <input\n        className=\"imageUpload__caption\"\n        type=\"text\"\n        placeholder=\"Enter a caption...\"\n        value={caption}\n        onChange={(e) => setCaption(e.target.value)}\n      />\n      <progress\n        className=\"imageUpload__progressBar\"\n        value={progress}\n        max=\"100\"\n      />\n      <input\n        className=\"imageUpload__button\"\n        type=\"file\"\n        onChange={handleChange}\n      />\n      <Button\n        className=\"imageUpload__uploadButton\"\n        onClick={caption && image && handleUpload}\n      >\n        Upload\n      </Button>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","function formatDate(date = new Date(), formatType = \"timeSince\") {\n  let hours = date.getHours(),\n    minutes = date.getMinutes(),\n    weekDay = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    monthName = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ],\n    ampm = hours >= 12 ? \"pm\" : \"am\",\n    strTime,\n    day;\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  strTime = hours + \":\" + minutes + ampm;\n  day = weekDay[date.getDay()];\n  let month = monthName[date.getMonth()];\n\n  // if the date is TODAY display only time else display DAY,DATE\n  let timeUI = () => {\n    switch (formatType) {\n      case \"time&date\":\n        // 6:28 pm 14 Nov, 2020\n        return `${strTime} ${date.getDate()} ${month}, ${date.getFullYear()}`;\n      case \"time&day&date\":\n        // 6:28 pm Sat 14 Nov, 2020\n        return `${strTime} ${day} ${date.getDate()} ${month}, ${date.getFullYear()}`;\n      case \"isToday\":\n        // 6:28 pm • Today\n        return `${strTime} • Today`;\n      case \"checkIfToday\":\n        return `${date.getDate()}•${month}•${date.getFullYear()}`;\n\n      case \"longTime\":\n        // Sat 14 Nov, 2020\n        return `${day} ${date.getDate()} ${month}, ${date.getFullYear()}`;\n      default:\n        // 20mins ago\n        return timeSince(date);\n    }\n  };\n\n  function timeSince(date) {\n    let seconds = Math.floor((new Date() - date) / 1000),\n      interval = seconds / 31536000;\n\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" years ago\"\n        : Math.floor(interval) + \" year ago\";\n    }\n    interval = seconds / 2592000;\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" months ago\"\n        : Math.floor(interval) + \" month ago\";\n    }\n    interval = seconds / 86400;\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" days ago\"\n        : Math.floor(interval) + \" day ago\";\n    }\n    interval = seconds / 3600;\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" hours ago\"\n        : Math.floor(interval) + \" hour ago\";\n    }\n    interval = seconds / 60;\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" minutes ago\"\n        : Math.floor(interval) + \" minute ago\";\n    }\n    return Math.floor(interval) > 1\n      ? Math.floor(seconds) + \" seconds ago\"\n      : Math.floor(seconds) + \" second ago\";\n  }\n\n  return timeUI();\n}\nconst isToday = (postTime, today = \"\") => {\n  const checkIsToday = \"checkIfToday\";\n\n  // returns time in formatDate default if is today and 'longTime if its not'\n  return formatDate(new Date(), checkIsToday) ===\n    formatDate(postTime, checkIsToday)\n    ? formatDate(postTime, today)\n    : formatDate(postTime, \"longTime\");\n};\n\nexport { formatDate, isToday };\n","import { Avatar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport firebase from \"firebase\";\nimport db from \"../firebase\";\nimport \"./Posts.css\";\nimport {\n  BookmarkBorderOutlined,\n  ChatBubbleOutlineOutlined,\n  DeleteOutlined,\n  FavoriteBorderOutlined,\n  SendOutlined,\n} from \"@material-ui/icons\";\nimport { isToday } from \"../time\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionTypes } from \"../actions/actionTypes\";\nimport { chooseAction } from \"../actions/actions\";\n\nconst Posts = ({ postId, username, imageUrl, caption, user, timestamp }) => {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const { presentUser } = useSelector(({ userReducer }) => {\n    let { user } = userReducer;\n    return {\n      presentUser: user,\n    };\n  });\n\n  useEffect(() => {\n    let unsubscribe;\n    if (postId)\n      unsubscribe = db\n        .collection(\"posts\")\n        .doc(postId)\n        .collection(\"comments\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) => {\n          setComments(snapshot.docs.map((doc) => doc.data()));\n        });\n\n    return () => unsubscribe();\n  }, [postId]);\n\n  const postComment = (e) => {\n    e.preventDefault();\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setComment(\"\");\n  };\n  const deletePost = () => {\n    // Prevent people not signed in from deleting post\n    user\n      ? username === presentUser.displayName\n        ? // prevent other users from deleting user's post\n          db\n            .collection(\"posts\")\n            .doc(postId)\n            .delete()\n            .then(() =>\n              console.log(`Document ID: ${postId} successfully deleted!`)\n            )\n            .catch((error) =>\n              console.error(\"Error removing document: \", error.message)\n            )\n        : alert(\"This is not your post\")\n      : alert(\"You're not signed in\");\n  };\n\n  return (\n    <>\n      {username && (\n        <div className=\"post\">\n          <div className=\"post__headerContainer\">\n            <div className=\"post__header\">\n              <Avatar className=\"post__avatar\" alt={username} src={imageUrl} />\n              <h3>{username}</h3>\n            </div>\n            <DeleteOutlined\n              className=\"post__headerDelete\"\n              onClick={deletePost}\n            />\n          </div>\n          <img className=\"post__image\" src={imageUrl} alt=\"\" />\n\n          <div className=\"post__icons\">\n            <div className=\"post__iconsGrouped\">\n              <FavoriteBorderOutlined className=\"post__icon\" />\n              <ChatBubbleOutlineOutlined className=\"post__icon\" />\n              <SendOutlined className=\"post__icon\" />\n            </div>\n            <BookmarkBorderOutlined className=\"post__icon\" />\n          </div>\n\n          <div className=\"post__content\">\n            <h4 className=\"post__contentText\">\n              <strong>{username}:</strong> {caption}\n            </h4>\n            <small className=\"post__contentTime\">\n              {isToday(timestamp?.toDate())}\n            </small>\n          </div>\n\n          <div className=\"post__comments\">\n            {comments.length > 0 ? (\n              <h2 className=\"post__commentsHeader\">Comments</h2>\n            ) : (\n              console.log(`👨‍🦱${username} 📨${caption}: 🤐 no comment`)\n            )}\n            {comments?.map((comment) => (\n              <div className=\"post__commentContainer\">\n                <p key={Math.random() * 1000} className=\"post__comment\">\n                  <strong>{comment.username}: </strong> {comment.text}\n                </p>\n                <small>\n                  {comment.timestamp && isToday(comment.timestamp?.toDate())}\n                </small>\n              </div>\n            ))}\n          </div>\n          <form className=\"post__commentBox\">\n            {user ? (\n              <>\n                <input\n                  className=\"post__input\"\n                  type=\"text\"\n                  placeholder=\"Add a comment...\"\n                  value={comment}\n                  onChange={(e) => setComment(e.target.value)}\n                />\n                <button\n                  className=\"post__button\"\n                  disabled={!comment}\n                  type=\"submit\"\n                  onClick={postComment}\n                >\n                  Post\n                </button>\n              </>\n            ) : (\n              <>\n                <input\n                  className=\"post__inputSignup\"\n                  type=\"text\"\n                  placeholder=\"Add a comment...\"\n                  value={comment}\n                  onChange={(e) => setComment(e.target.value)}\n                />\n                <button\n                  className=\"post__buttonSignup\"\n                  type=\"submit\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    dispatch(chooseAction(true, actionTypes.SET_OPEN_SIGN_IN));\n                  }}\n                >\n                  Login to comment\n                </button>\n              </>\n            )}\n          </form>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Posts;\n","import \"./Poster.css\";\nimport React from \"react\";\nimport ImageUpload from \"./ImageUpload\";\nimport Posts from \"./Posts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport { actionTypes } from \"../actions/actionTypes\";\nimport { chooseAction } from \"../actions/actions\";\n\nconst Poster = () => {\n  const { user, posts } = useSelector(({ userReducer, postReducer }) => {\n    let { user } = userReducer,\n      { posts } = postReducer;\n    return {\n      user,\n      posts,\n    };\n  });\n  const dispatch = useDispatch();\n  return (\n    <div className=\"poster\">\n      {user ? (\n        <ImageUpload username={user.displayName} />\n      ) : (\n        <div className=\"poster__signUpContainer\">\n          <Button\n            className=\"poster__notLoggedIn\"\n            onClick={() => dispatch(chooseAction(true, actionTypes.SET_OPEN))}\n          >\n            Sign Up To Upload\n          </Button>\n        </div>\n      )}\n      {posts?.map(({ id, username, imageUrl, caption, timestamp }) => {\n        return (\n          <Posts\n            key={id}\n            postId={id}\n            user={user}\n            timestamp={timestamp}\n            username={username}\n            imageUrl={imageUrl}\n            caption={caption}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Poster;\n","import { useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport db, { auth } from \"./firebase\";\nimport InstagramEmbed from \"react-instagram-embed\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Poster from \"./components/Poster\";\nimport { actionTypes } from \"./actions/actionTypes\";\nimport { chooseAction } from \"./actions/actions\";\n\nfunction App() {\n  const { REACT_APP_CLIENT_TOKEN, REACT_APP_ID } = process.env,\n    merge = `${REACT_APP_ID}|${REACT_APP_CLIENT_TOKEN}`;\n  const { SET_USER, SET_POSTS } = actionTypes;\n\n  const dispatch = useDispatch();\n  const { user, username } = useSelector(({ userReducer }) => {\n    let { user, username } = userReducer;\n    return {\n      user,\n      username,\n    };\n  });\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) =>\n      authUser\n        ? dispatch(chooseAction(authUser, SET_USER))\n        : dispatch(chooseAction(null, SET_USER))\n    );\n    return () => unsubscribe();\n  }, [user, username, dispatch, SET_USER]);\n\n  useEffect(() => {\n    function database() {\n      db.collection(\"posts\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) => {\n          dispatch(\n            chooseAction(\n              snapshot.docs.map((doc) => {\n                const data = doc.data(),\n                  id = doc.id;\n                return { id, ...data };\n              }),\n              SET_POSTS\n            )\n          );\n        });\n    }\n    database();\n  }, [SET_POSTS, dispatch]);\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <Poster />\n      <InstagramEmbed\n        url=\"https://www.instagram.com/p/BAuc9JmQodPPZBdR1UiXg6YVR2IJ80yx-PatzE0/\"\n        clientAccessToken={merge}\n        maxWidth={320}\n        hideCaption={false}\n        containerTagName=\"div\"\n        protocol=\"\"\n        injectScript\n        onLoading={() => {}}\n        onSuccess={() => {}}\n        onAfterRender={() => {}}\n        onFailure={() => {}}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { actionTypes } from \"../actions/actionTypes\";\n\nexport const initialState = {\n  user: null,\n  username: \"\",\n  email: \"\",\n  password: \"\",\n};\n\nconst userReducer = (state = initialState, action) => {\n  console.log(` 💪 ${action.type} ACTION 💪`, action);\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        ...state,\n        user: action.user,\n      };\n    case actionTypes.SET_USERNAME:\n      return {\n        ...state,\n        username: action.username,\n      };\n    case actionTypes.SET_PASSWORD:\n      return {\n        ...state,\n        password: action.password,\n      };\n    case actionTypes.SET_EMAIL:\n      return {\n        ...state,\n        email: action.email,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { actionTypes } from \"../actions/actionTypes\";\n\nexport const initialState = {\n  posts: [],\n};\n\nconst postReducer = (state = initialState, action) => {\n  console.log(` 💪 ${action.type} ACTION 💪`, action);\n  switch (action.type) {\n    case actionTypes.SET_POSTS:\n      return {\n        ...state,\n        posts: action.posts,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n","import { actionTypes } from \"../actions/actionTypes\";\n\nexport const initialState = {\n  open: false,\n  openSignIn: false,\n};\n\nconst openReducer = (state = initialState, action) => {\n  console.log(` 💪 ${action.type} ACTION 💪`, action);\n  switch (action.type) {\n    case actionTypes.SET_OPEN:\n      return {\n        ...state,\n        open: action.open,\n      };\n    case actionTypes.SET_OPEN_SIGN_IN:\n      return {\n        ...state,\n        openSignIn: action.openSignIn,\n      };\n    default:\n      return state;\n  }\n};\n\nexport { openReducer };\n","import { combineReducers } from \"redux\";\nimport userReducer from \"./userReducer\";\nimport postReducer from \"./postReducer\";\nimport { openReducer } from \"./modalReducer\";\n\nconst rootReducer = combineReducers({\n  userReducer,\n  postReducer,\n  openReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport \"./index.css\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nconsole.log(\"List of Reducers Stored in STATE 👉\", store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}